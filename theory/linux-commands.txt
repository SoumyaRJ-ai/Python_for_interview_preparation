Linux Commands (Case Sensitive):

Basic:
------
	pwd                ==> print the name of current directory   || Ex: pwd
	whoami             ==> print the current user                || Ex: whoami
	cd [directoryName] ==> enter a directory               		 || Ex: cd Music
	cd ..              ==> go back to the parent directory       || Ex: cd ..
	cp [file]          ==> copy file                             || Ex: cp music.mp3
	ls                 ==> list all items in the current folder  || Ex: ls
	clear              ==> clears the terminal                   || Ex: clear
	mkdir [foldername] ==> makes folder with the specified name  || Ex: mkdir Songs
	rmdir [foldername] ==> removes the specified folder          || Ex: rmdir Songs
	echo [param]       ==> outputs the value of the variable	 || Ex: echo "Hi"
						   or string to stdout
	tree 			   ==> lists the files in the current		 || Ex: tree
						   directory in tree like format

For sorting files:
-------------------
	mv [file] [newname]==> rename a file or folder  			 || Ex: mv exe txt
	cat [filename]     ==> reads the specified file              || Ex: cat cmds.txt
	tac [filename]     ==> reads the specified file in reverse   || Ex: tac cmds.txt
	tail [file, file]  ==> reads first 10 lines of the files     || Ex: tail cmds.txt
	zip [file, file]   ==> compresses the specified files        || Ex: zip files
	vi [file]          ==> edit file in the terminal             || Ex: vi cmds.txt
	gedit [file]       ==> edits the file in text editor         || Ex: gedit cm.txt
	nano [file]        ==> edit file in nano editor              || Ex: nano cmds.txt
	tar                ==> same as bzip2 						 || Ex: tar file
	bzip2 -z / -d      ==> compress and decompress files with    || Ex: bzip2 -z cmds
						   the extension "bz2" respectively
	gzip               ==> same as bzip2 but compresses files    || Ex: gzip file
							with a gz extension.

Getting help:
-------------
	man [command]      ==> show the manual of the command        || Ex: ls man
	[command] --help   ==> similar to man but ouputs in terminal || Ex: pwd --help
	apropos [word]     ==> search for the word in description    || Ex: aprpos list
						   of all commands

More advanced:
--------------
	reboot             ==> reboot the system                     || Ex: reboot
	which [command]    ==> ouputs the location of the command    || Ex: which ls
	su [username]      ==> impersonate as the specified user     || Ex: su root
	id				   ==> print user and group information 	 || Ex: id
	hostname		   ==> display or seta computer`s hostname   || Ex: hostname
	host			   ==> to get the host DNS details	         || Ex: host
	uname -a           ==> show  all the information of the OS   || Ex: uname -a
	exit               ==> exit the current user or the terminal || Ex: exit
	shutdown -P +min   ==> shutdowns the system        			 || Ex: shutdown -P

Networking:
--------------
	ifconfig           ==> lists all the network interfaces on   || Ex: ifconfig
						   your machine
	ss/netstat         ==> displays network connections for TCP, || Ex: netstat
						   routing tables, and a number of
						   network interface and network
						   protocol statistic
	traceroute 		   ==> Uses ICMP protocol and finds the hops
						   involved in reading destination server.
						   It shows time taken for each hop.
	mtr                ==> it is mix of ping and traceroute. It
	                       provides info on intermediate hosts &
						   responsiveness.
	dig				   ==> to get DNS records associated with a
	                       domain name
	nslookup           ==> similar to dig
	nc                 ==> utility to debug TCP/UDP sockets
	telnet			   ==> to test remote connectivity on ports
	route              ==> to get all route table information
	arp 			   ==> to view and manage arp cache


For listing hardware:
---------------------
	lscpu             ==> list CPU architecture information      || Ex: lscpu
	lsusb             ==> list information about usbs            || Ex: lsusb
	lsblk 			  ==> list block devices					 || Ex: lsblk
	lsof			  ==> list opened files						 || Ex: lsof
	lspci       	  ==> list PCI devices  	 				 || Ex: lscpi

System Administration:
----------------------
  User Management:
  who 			     ==> prints the current logged in users  || Ex: who
  users              ==> shows names of users logged in      || Ex: users
  adduser [username] ==> adds another user                   || Ex: adduser david
  useradd [username] ==> same as adduser but is not preferrd || Ex: useradd david
  deluser            ==> deletes a user                      || Ex: deluser david
  usermod [user]	 ==> modify user settings & prefrences   || Ex: usermod david --shell /bin/bash
  passwd [user]      ==> change the password of the user	 || Ex: passwd
  uptime             ==> shows how long the system has been  || Ex: uptime
                         running, number logged on users and
                         the system load averages
  visudo 			 ==> recommended way to edit   			 || Ex: sudo visudo
  						 /etc/sudoers file
  vipw 			     ==> recommended way to edit /etc/passwd || Ex: sudo vipw
  						 file
  systemctl 		 ==> mangae all the background running   || Ex: sudo systemctl disable ssh
  						 services (daemons)
  journalctl 		 ==> see all the logs for systemctl		 || journalctl -xe

Important Files:
----------------
  /etc/passwd     ==> stores information of all the users	 || cat /etc/passwd
  /etc/shadow     ==> stores the hashed version of every 	 || cat /etc/passwd
					user`s password


ps(Process Status)==> displays currently-running processes   || Ex: ps
ss(Socket Status) ==> used to dump socket statistics and	 || Ex: ss
					  displays information



chmod +rwx filename to add permissions.
chmod -rwx directoryname to remove permissions.
chmod +x filename to allow executable permissions.
chmod -wx filename to take out write and executable permissions.

copy files
	cp -v my_file.txt my_file2.txt my_file3.txt /new_directory

copy directory of files
	cp -a /source/. /dest/

	The -a option is an improved recursive option, that preserve all file attributes, and also preserve symlinks.


disk space check
	du -h
	df -H



LIMITS
======
- open Files Max limit
	cat /proc/sys/fs/file-max


ulimit -n  	–> It will display number of open files limit
ulimit -c 	–> It display the size of core file
umilit -u 	–> It will display the maximum user process limit for the logged in user.
ulimit -f 	–> It will display the maximum file size that the user can have.
umilit -m 	–> It will display the maximum memory size for logged in user.
ulimit -v 	–> It will display the maximum memory size limit

ulimit -Hn 	-> It wil display hard limit for number of open file for logged in user
ulimit -Sn 	-> It wil display soft limit for number of open file for logged in user

To increase limit on number of Maximum Files was reached, as a root user,
	 sysctl -w fs.file-max=100000

	To persist these changes after reboot, edit /etc/sysctl.conf and add this parameter there


Iptables
	- its firewall that allows system administrators to manage incoming and outgoing traffic
	  via a set of configurable table rules.
	- Iptables uses a set of tables which have chains that contain set of built-in or user
	  defined rules.

To List Disks on Linux using lsblk
	$ lsblk


Linux
    - Linux has all components like kernel, shells, GUIs, system utilities and application programs.
    - Linux os ( Red Hat, Fedora, Ubuntu, Debian, ...)
    - Unix OS (Solaris, HP Unix,). Solaris is the Linux of Sun Microsystems.
    - 3 parts
        1. Kernel:
            - Linux Kernel is low-level system software.
            - It is used to manage the hardware resources for the users.
            - It provides an interface for user-level interaction.
            - It acts as a bridge between software and hardware.
            - If Software requests the hardware, then kernel delivers the data between software and hardware.
            - responsible for all major activities of the Linux operating system.
            - Linux Kernel is considered as free and open-source software that is
              capable of managing hardware resources for the users.
            - It consists of various modules and interacts directly with the underlying hardware.

        2. System Library:
            - Most of the functionalities of the operating system are implemented by
              System Libraries.
            - These act as a special function using which application programs accesses
              Kernel’s features.

        3. System Utility:
            - These programs are responsible for performing specialized, individual-level tasks.
    - Files
        - Maximum length of file in linux is 255 characters.
        - inode
            - unique name given to each file, by the operating system.
        - File Permissions
            - There are 3 types of permissions in Linux OS that are given below:
                - Read: User can read the file and list the directory.
                - Write: User can write new files in the directory .
                - Execute: User can access and run the file in a directory.
            - chmod - System administrator or file owner can grant permissions using chmod command
                - two modes: Symbolic Mode and Absolute Mode
                - Two Modes:
                    1. Symbolic Mode
                        - SYNTAX: chmod <target>(+/-/=)<permission> <filename>
                        - '+' for adding permission
                        - '-' for denying permission
                        - target
                            - u: user
                            - g: group
                            - o: other
                            - a: all
                        - permissions
                            - r: read
                            - w: write
                            - x: execute
                        - $ chmod u=rwx,g=rx,o=r filename
                            - user can read/write/execute; group can read/execute; other can read.
                    2. Absolute Mode
                        - $ chmod <permission> filename
                        - The Absolute mode follows octal representation.
                            - The leftmost digit is for the user,
                            - the middle digit is for the user group and
                            - the rightmost digit is for all.
                            - 1: execute
                            - 2: write
                            - 4: read
                        - $ chmod u=rwx,g=rx,o=r filename
                          rwx - 4+2+1 = 7
                          rx  - 4+1   = 5
                          r   - 4     = 4
                          $ chmod 754 filename




        - File Systems
            - supports multiple file systems
                - LINUX - Ext, Ext2, Ext3, Ext4, JFS, XFS, btrfs, ufs, FAT, autofs, devpts, ntfs and swap.
                - UNIX  - jfs, gpfs, hfs, etc.
        - Redirections
            - There are basically three streams available in which input and output of the Linux environment are distributed.
                - Input Redirection : ‘<’ symbol is used for input redirection and is numbered as (0). Thus it is denoted as STDIN(0).
                - Output Redirection: ‘>’ symbol is used for output redirection and is numbered as (1). Thus it is denoted as STDOUT(1).
                - Error Redirection : It is denoted as STDERR(2).

                - ‘>’ overwrites the existing content of the file or creates a new file.
                - ‘>>’ appends the new content to the end of the file or creates a new file.
    - LILO(LInux LOader)
        - boot loader for Linux, used to load the Linux operating system into the main memory
         to begin its operations.
        - Bootloader here is a small program that manages a dual boot.
        - LILO resides in MBR (Master Boot Record).
        - Advantage: it allows the fast bootup of Linux when installing in the MBR.
        - Limitation: it is not possible for all computers to tolerate modification of MBR.
    - Swap space
        - amount of physical memory that is allocated for use by Linux to hold some
          concurrent running programs temporarily.
        - This condition usually occurs when RAM does not have enough memory to support
          all concurrent running programs.
        - This memory management involves the swapping of memory to and from physical storage.
    - Daemons
        - background process which accepts the requests for service from other computers, most of the
          operating systems use daemons in other forms.
    - root account
        - It is like a system administrator account.
        - It provides you full control of the system.
        - root account serves as the default account whenever Linux is installed.
        - You can create and maintain user accounts, assign different permission for each
          account, etc.
        - uses
            - Create user accounts
            - Maintain user accounts
            - Assign different permissions to each account created and so on.
    - shell
        - It is an interpreter in Linux.
        - Shell is a computer program which acts as an interface between the user and the kernel.
        - Users can communicate with the kernel by writing programs, commands and scripts on the shell.
        - It accepts human-readable commands and converts them into the kernel understandable language.
        - The most commonly used shells in Linux are bash, csh(C shell), ksh(K Shell), Tcsh.
            C Shell (csh)                   : It is like C syntax and provides spelling checking and job control.
            Korn Shell (ksh)                : Is a high-level programming language shell.
            Z Shell (Zsh)                   : It provides some unique nature like it observes login/logout watching, file name generating, startup files, closing comments.
            Bourne Again Shell (bash)       : It is the default to Linux distributions.
            Friendly Interactive Shell (Fish): It provides web-based configuration,  auto-suggestions, etc.
        - internal commands
            - commands which are built in the shells
        - In Unix, Bourne Shell & in Linux, Bash
        - BASH(Bourne Again SHell)
            - replacement to the original Bourne shell, written by Steve Bourne.
            - written by Brian Fox
            - Bash vs DoS
                - BASH commands are case sensitive while DOS commands are not case sensitive.
                - DOS follows a convention in naming files.
                    In BASH, 8 character file name is followed by a dot and 3 characters for the extension.
                    DOS doesn't follow such convention.
    - processes
        - process id
            - unique id identified by os, for eachg process
        - process states
            Ready                   : The process is created and is ready to run
            Running                 : The process is being executed
            Blocked or wait         : Process is waiting for input from the user
            Terminated or Completed : Process completed execution, or was terminated by the Operating System
            Zombie                  : Process terminated, but the information still exists in the process table.
        - Process Management System Calls in Linux
            - The System Calls to manage the process are:
                fork ()     : Used to create a new process
                exec()      : Execute a new program
                wait()      : Wait until the process finishes execution
                exit()      : Exit from the process
            - And the System Calls used to get Process ID are:
                getpid()    :- get the unique process id of the process
                getppid()   :- get the parent process unique id
    - CLI (Command Line Interface)
        - Interface that allows users to type declarative commands to instruct the computer
          to perform operations.
    - partitions
        - Minimum two disk partitions are required to install Linux.
            1. first is used as the local file system where all the files are stored.
               This includes files of the OS, files of applications and services, and files of the user.
            2. second is used as Swap Space which acts as an extended memory for RAM.
        - /stc partition - stores the system configuration files in Linux system
    - services
        - Samba service is used to connect Linux machines to Microsoft network resources
          by providing Microsoft SMB support.
        - Cron
            - allows the user to schedule tasks to be executed every minute.
            - Tasks can be scheduled by any normal user and are basically used when tasks
              have to be completed/executed at a particular hour or minute.
            - It is ideal for servers
            - Cron expects the system to be running 24x7.
        - Anacron
            - allows the user to schedule tasks to be run either on a specific date or the first available cycle after the date.
            - can be used only by super users and is used when a task has to be executed irrespective of hour or minute.
            - It is ideal for desktops and laptops
            - Anacron does not expects the system to be running 24x7.
    - Mount Points
        - SoftMount
            - If the client fails to connect the server, it gives an error report and
              closes the connection
        - Hard mount
            - If the client fails to access the server, the connection hangs; and once
              the system is up, it again accesses the server.
    - Vi Editor
        - 3 types of modes in vi Editor:
            - Regular mode or command mode
            - Insertion mode or edit mode
            - Replacement mode or Ex-mode
        - commands
            - :wq saves the current work and exits the VI.
            - :q! exits the VI without saving current work.
            - x deletes a current character.
            - dd deletes the current line.
    - commands
        - Get Total memory used by Linux
            1. Free command:
                - To display the free, used and swap memory available in the system
                $ free –m
                    the option ‘m' displays all the data in MBs.
            2. /proc/meminfo:
                $ cat /proc/meminfo
            3. vmstat:
                This command basically lays out the memory usage statistics.
                $ vmstat –s
            4. top:
                This command determines the total memory usage as well as also monitors the
                RAM usage.
                $ top
            5. htop:
                This command also displays memory usage along with other details.
                $ htop
        - user management commands
                last,
                chage,
                chsh,
                lsof,
                chown,
                chmod,
                useradd,
                userdel,
                newusers etc.
        - file related
            - head: Displays the beginning of the file
            - tail: Displays the last part of the file
            - cat : Concatenate files and print on the standard output.
            - more: Displays the content in pager form and is used to view the text in the terminal window
                    one page or screen at a time.
            - less: Displays the content in pager form and allows backward and single line movement.
        - Directory related
            - sort
                - sort the entries in a text file in ascending order
                    - $ sort sample.txt
            - cd
                cd~: Brings you to the home directory
                cd-: Brings you to the previous directory
                .  : Bring you to the parent directory
                cd/: Takes you to the entire system’s root directory
            - ls [options] [file|dir]

                option flags
                    -a  to list all files, along with hidden files
                    -F	add one char of */=>@| to enteries
                    -i	list files with their inode index number
                    -l  list with long format - show permissions
                    -h  list readable file sizes (KB, ...)
                    -s  list file sizes in KB
                    -r  list in reverse order
                    -R  list recursively directory tree
                    -t  sort by time & date
                    -X  sort by extension name
                    -S	 lists files with their size and sorts the list by file size

                $ ls /   		List root directory
                $ ls ..  		List parent directory
                $ ls ~	 		List user's home directory (e.g: /home/user)
                $ ls *	 		List all subdirectories
                $ ls *.txt		List only text files with wildcard
                $ ls > out.txt	ls redirection to output file
                $ ls -d */		List directories only:
                $ ls -d $PWD/*	List files and directories with full path
                $ ls --version  Check version of ls command.
                $ ls -l /tmp    List files of the directory '/tmp'
                $ ls -ld /tmp/  displays information of /tmp directory
                $ ls -n 		display UID and GID of files and directories
                - To shows files by size, biggest file will be displayed last,
                    $ ls - lSr
            - cat [options] file1 [file2...]
                to display the content of text files and
                to combine several files to one file.
                The cat command does not accept directories.

                $ cat -b	add line numbers to non blank lines
                $ cat -n	add line numbers to all lines
                $ cat -s	squeeze blank lines to one line
                $ cat -E	show $ at the end of line
                $ cat -T	show ^I instead of tabs

                $ cat list1.txt
                    milk
                    bread
                    apples

                $ cat list2.txt
                    house
                    car

                $ cat list1.txt list2.txt
                    milk
                    bread
                    apples

                    house
                    car

                Combine 2 text files to another file
                $ cat list1.txt list2.txt > todo.txt
            - cp
                - To copy a file
                $ cp <source> <destination>
                $ cp questions.txt /new/linux /linux/interview
            - mv
                - To rename a file
                $ mv <oldname> <newname>
            - rm
                - To delete a file
                    $ rm <oldname>
                - To delete all files in current directory that contains the word 'linux'
                    $ for i in *linux*; do rm $i; done
            - rmdir
                $ rmdir <directory name>
            - rm -rf
                $ rm -rf <directory name>
                - should be used carefully because it will delete all the data without any warnings.
            - locate
                - To find path to the file
                $ locate sample.txt
            - diff
                - To find text differences between two files
                $ diff abc.conf xyz.conf
            - touch
                - used to create a text file without opening it.
                $ touch <filename>
                $ touch sample.txt
            - tar
                - command is used to extract or create an archived file.
                - To extract files from an archived file,
                    - $ tar -xvzf sample.tar.gz
                - To create an archive of all files in current directory,
                    - $ tar -cvzf filename.tar.gz
                - FLAGS
                    c: create archive
                    x: extract
                    v: verbose
                    f: file
                - To list content of tar.gz file
                    - $ tar tf file.tgz
                - To extract only one file in tar.gz file,
                    - $ tar xf file.tgz filename
            - zcat
                - To see content of compressed file with extension .z,
                    - $ zcat sample.z
            - xclip
                - To copy text to the clipboard
                    - $ cat file.txt | xclip -selection clipboard
            - find
                - To find files using names
                    $ find -name "MyCProgram.c"
                - To find files using names, ignoring case
                    $ find -iname "MyCProgram.c"
                - Limit Search To Specific Directory Level Using mindepth and maxdepth
                    - To try find the word 'passwd' in all files, from root directory level
                        $ find / -name passwd
                    - Find the passwd file under root and one level down. (i.e root — level 1, and one sub-directory — level 2)
                        $ find -maxdepth 2 -name passwd
                    - Find the passwd file under root and two levels down. (i.e root — level 1, and two sub-directories — level 2 and 3 )
                        $ find -maxdepth 3 -name passwd
                    - Find the password file between sub-directory level 2 and 4.
                        $ find -mindepth 3 -maxdepth 5 -name passwd
                - Find files based on file type
                    - Find only the socket files
                        $ find . -type s
                    - Find all directories
                        $ find . -type d
                    - Find only the normal files
                        $ find . -type f
                    - Find all the hidden files
                        $ find . -type f -name ".*"
                    - Find all the hidden directories
                        $ find -type d -name ".*"
                - Find files by size
                    - NOTE:  – means less than the give size,
                             + means more than the given size, and
                             no symbol means exact given size.
                    - Find files bigger than the given size
                        $ find ~ -size +100M
                    - Find files smaller than the given size
                        $ find ~ -size -100M
                    - Find files that matches the exact given size
                        $ find ~ -size 100M
                    - To remove big archive(.zip) files, exceeding 100MB,
                        $ find / -type f -name *.zip -size +100M -exec rm -i {} \;"
                    - Find TOP 5 big files
                        $ find . -type f -exec ls -s {} \; | sort -n -r | head -5
                    - Find TOP 5 small files
                        $ find . -type f -exec ls -s {} \; | sort -n  | head -5

                - Find all empty files
                    -
                        $ find ~ -empty
                    - List all the empty files only in your home directory.
                        $ find . -maxdepth 1 -empty
                    - List only the non-hidden empty files only in the current directory.
                        $ find . -maxdepth 1 -empty -not -name ".*"

                - Find files based on permissions
                    - Find files with exact permissions,
                        $ find . -perm -g=r -type f -exec ls -l {} \;
                    - Find files which has read permission only to group.
                        $ find . -perm g=r -type f -exec ls -l {} \;
                    - Find files which has read permission only to group [ search by octal ]
                        $ find . -perm 040 -type f -exec ls -l {} \;
                - Find files based on inode number
                    $ find -inum 16187430

        - grep
            - stands for "global regular expression print"
            - used for matching a regular expression against text in a file.
            - This command performs pattern-based searching and only the matching lines are displayed as output.
            - It makes use of options and parameters that are specified along with the command line.
            - SYNTAX:
                grep [options] pattern [files]
            - $ grep -c "linux" interview.txt
            - $ cat linux.txt | grep ^a
                - lists all lines which start with 'a'.
            - $ cat linux.txt | grep n
                - lists all lines which have 'n' in it.
            - $ grep -l this demo_*
                - Display only the file names which matches the given pattern
            - When you want do find out how many lines matches the pattern
                $ grep -c this demo_file
                  3
            - When you want do find out how many lines that does not match the pattern
                $ grep -v -c this demo_file
                  4
            - Show Only matched strings
                $ grep -o "is.*line" demo_file
                    is line is the 1st lower case line
                    is line
                    is is the last line
            - Show line number while displaying the output
                $ grep -n "go" demo_text
                    5: * e - go to the end of the current word.
                    6: * E - go to the end of the current WORD.
                    7: * b - go to the previous (before) word.
                    8: * B - go to the previous (before) WORD.
                    9: * w - go to the next word.
                    10: * W - go to the next WORD.

        - Network troubleshooting commands
            Hostname    : To view the hostname (domain and IP address) of the machine and to set the hostname.
            Ping        : To check if the remote server is reachable or not.
            ifconfig    : To display and manipulate route and network interfaces. It displays network configuration.
            netstat     : It displays network connections, routing tables, interface statistics.
                          ‘ss’ is the replacement of netstat command which is used to get more information.
            Traceroute  : It is a network troubleshooting utility that is used to find the number of hops required for a particular packet to reach the destination.
            Tracepath   : It is the same as traceroute with a difference that it does not require root privileges.
            Dig         : This command is used to query the DNS name servers for any task related to the DNS lookup.
            nslookup    : To find DNS related query.
            Route       : It shows the details of the route table and manipulates the IP routing table.
            mtr         : This command combines ping and track path into a single command.
            Ifplugstatus: This command tells us whether the network cable is plugged in or not.
        - process related
            $ ps        : To list all processes
            $ kill 3849 : To terminate process with process id 3849
            # lsof      : To know which file is opened by which process.
        - mount
            - To see list of mounted devices
                $ mount -l
            - To show free inodes on mounted filesystems,
                $ df -l
            - To show free space on mounted filesystems,
                $ df -h
            - To show disks partitions sizes and types (run as root).
                $ fdisk -l
            - To retrieve more detailed information about which files use the disk space in a directory,
                $ du -sh
        - Scheduling Tasks
            - cron
                - used to repeatedly schedule a task at a specific time.
                - SYNTAX : <minute> <hour> <day> <month> <weekday> <command>
                - EXAMPLE: 0 16 * * 0 <command>
            - at
                - used to schedule a task only once at the specified time.
                - $ echo "shutdown now" | at -m 18:00
        - export
            - used to set and reload the environment variables.
            - $ export JAVA_HOME = /home/user/Java/bin
        - env
            - To list all environment variables
        - service
            - To check if a service is running
                - $ service <servicename> status
            - To check the status of all the services
                - $ service --status-all
            - To start a service,
                - $ service <servicename> start
            - To stop a service,
                - $ service <servicename> stop
        - timeout
            - To run a command for a limited time,
                - $ timeout 10s ./script.sh
        - /usr/bin/time
            - to check resource usage:
                - $ /usr/bin/time -v ls
        - inotifywait
            - To run a command, everytime a file is modified,
                - $ while inotifywait -e close_write document.tex
                    do
                    make
                    done
        - namei
            - To check permissions of each directory to a file
            - $ namei -l /path/to/file.txt

Logs
	For system logs,
		/var/log/syslog	in Debian family
		/var/log/messages in Redhat family

	For authorization logs(successful/failed logins and authentication processes),
		/var/log/auth.log in Debian family
		/var/log/secure in Redhat family

	/var/log/boot.log: .
	/var/log/maillog or var/log/mail.log: is for mail server logs, handy for postfix, smtpd, or email-related services info running on your server.
	/var/log/kern: keeps in Kernel logs and warning info. Also useful to fix problems with custom kernels.
	/var/log/dmesg: a repository for device driver messages. Use dmesg to see messages in this file.
	/var/log/faillog: records info on failed logins. Hence, handy for examining potential security breaches like login credential hacks and brute-force attacks.
	/var/log/cron: keeps a record of Crond-related messages (cron jobs). Like when the cron daemon started a job.
	/var/log/daemon.log: keeps track of running background services but doesn’t represent them graphically.
	/var/log/btmp: keeps a note of all failed login attempts.
	/var/log/utmp: current login state by user.
	/var/log/wtmp: record of each login/logout.
	/var/log/lastlog: holds every user’s last login. A binary file you can read via lastlog command.
	/var/log/yum.log: holds data on any package installations that used the yum command. So you can check if all went well.
	/var/log/httpd/: a directory containing error_log and access_log files of the Apache httpd daemon. Every error that httpd comes across is kept in the error_log file. Think of memory problems and other system-related errors. access_log logs all requests which come in via HTTP.
	/var/log/mysqld.log or /var/log/mysql.log : MySQL log file that records every debug, failure and success message, including starting, stopping and restarting of MySQL daemon mysqld. The system decides on the directory. RedHat, CentOS, Fedora, and other RedHat-based systems use /var/log/mariadb/mariadb.log. However, Debian/Ubuntu use /var/log/mysql/error.log directory.
	/var/log/pureftp.log: monitors for FTP connections using the pureftp process. Find data on every connection, FTP login, and authentication failure here.
	/var/log/spooler: Usually contains nothing, except rare messages from USENET.
	/var/log/xferlog: keeps FTP file transfer sessions. Includes info like file names and user-initiated FTP transfers.

Systems/Linux
=============
1) How to show the process table
Ans)Process table is maintained by OS, for helping , mainly, in scheduling and context switching.
	Each row in it contains process information such as process name, state, priority, registers and semaphores, etc.
	Also, an entry to the page table, if the OS supports paging.
	ps command will give details of all processes.  

2) What tool can be used to search and replace a string in a file
Ans)sed is the tool for search and replace.
	Ex: sed -i 's/existing_string/new_string/g' file_name.txt
		It replaces all occurrences of "existing_string" with "new_string", in the file file_name.txt.


3) How to determine which process is listening on a specific port
Ans)Netstat is the tool, for checking the process level details.
	The specific command is
		netstat -anpe | grep "1234" | grep "LISTEN"

4) How to list open files
Ans)lsof is a tool, which can help in the file descriptor information.
	To show the opened files, by a specific process,
		sudo lsof -p PROCESS_NUMBER

5) Where are logs typically found
Ans)In Linux, all the logs are generally stored in /var/log
