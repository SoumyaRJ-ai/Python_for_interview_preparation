1) Install TypeScript globally
	npm install -g typescript

2) Check typescript version
	tsc -v

3) create react app with typescript
	npx create-react-app frontend --template typescript

4) Install modules
	npm install --save ag-grid-community ag-grid-react

5) For local development,
	npm start

6) For production push,
	npm run build prod
	npm install -g serve
	serve -s build


==================
tsconfig.json

	{
	  "compilerOptions": {
		// No module system, concatenated file
		"module": "none",

		// Set React as the JSX factory
		"jsx": "react",

		// Resolve modules using Node-resolution algorithm
		"moduleResolution": "node",

		// Target ES6 for more modern browsers
		"target": "es6",

		// Include typings from built-in lib declarations
		"lib": ["es2015", "dom", "dom.iterable"],

		// Include module source maps for debugging
		"sourceMap": true,

		// Output to single concatenated file
		"outFile": "dist/bundle.js"
	  },
	  "include": ["src"]
	}
JavaScript Hoisting
	refers to the process whereby the interpreter appears to move the
	declaration of functions, variables or classes to the top of their
	scope, prior to execution of the code.
	Hoisting allows functions to be safely used in code before they are declared.

==================
angular
=========
AngularJS lifecycle hooks
	Angular gives us 8 hooks to allow us to tap into the lifecycle
	of our components and trigger actions at specific points in the lifecycle.

	1. ngOnChanges
	2. ngOnInit
	3. ngDoCheck
	4. ngAfterContentInit
	5. ngAfterContentChecked
	6. ngAfterViewInit
	7. ngAfterViewChecked
	8. ngOnDestroy


Data binding in AngularJS
	is the synchronization between the model and the view.
	When data in the model changes, the view reflects the change, and
	when data in the view changes, the model is updated as well.


two-way data binding in Angular is
	used to display information to the end user and allows the end user
	to make changes to the underlying data using the UI.
	This makes a two-way connection between the view (the template) and
	the component class. This is similar to the two-way binding in WPF.


String Interpolation
	in Angular 8 is a one-way data-binding technique that
	is used to transfer the data from a TypeScript code to an HTML template (view).
	It uses the template expression in double curly braces to display the data
	from the component to the view.

promises
	to execute asynchronous functions that use callbacks,
	while emitting and completing (resolving or rejecting) one value
	at a time.
	When using an Angular Promise, you are enabled to emit a single event from the API

promise vs callbacks
	A callback function is passed as an argument to another function whereas
	Promise is something that is achieved or completed in the future.
	In JavaScript, a promise is an object and we use the promise constructor to initialize a promise.

	we, generally, pass a callback into a function that would then get called upon
	completion in order to get the result of something.
	In promises, however, you attach callbacks on the returned promise object.

promises vs observables
	promises
		are not lazy: execute immediately after creation.
		Emit a single value at a time.
		Are not cancellable.
		Push errors to the child promises.

	Observables
		are lazy: they're not executed until we subscribe to them using the subscribe() method.
		Emit multiple values over a period of time.
		Have subscriptions that are cancellable using the unsubscribe() method, which stops the listener from receiving further values.
		Deliver errors to the subscribers.
		Provide the map for forEach, filter, reduce, retry, and retryWhen operators.

Dependency injection
	is basically providing the objects that an object needs
	(its dependencies) instead of having it construct them itself.

	It's a very useful technique for testing, since it allows dependencies
	to be mocked or stubbed out.
==================
React
=========
React component lifecycle
	1) INITIALIZATION
		- setup props and state
	2) MOUNTING
		- constructor->componentWillMount->render->componentDidMount//Birth
	3) UPDATE
		- shouldComponentUpdate
			->componentWillUpdate ->render->componentDidUpdate //Growth
	4) UNMOUNTING
		- componentWillUnmount //Death



aggrid usage case
